xwayland enable
exec mako
exec dbus-update-activation-environment --systemd \
    WAYLAND_DISPLAY XDG_SESSION_TYPE=wayland XDG_CURRENT_DESKTOP=sway
# APPEARANCE ------------------------------------------------------------------
set $wsi 1:
set $wschrm 2:
set $wsc 3:
set $wsdoc 21:
set $wscalc 22:
set $wspres 23:
set $wsdraw 24:
set $wsm 100:
set $wsw 99:甆
set $wschat 98:
set $wsgimp 97:
set $wsmail 96:﫯
set $wscal 95:
set $wsvol 94:
set $wsspfy 101:
set $wstorr 102:
set $wst1 11:
set $wst2 12:
set $wst3 13:
set $wst4 14:
set $wst5 15:
set $wst6 16:
set $wst7 17:

set $barbg #00000000
set $bartxt #ffffffff
set $bardim #999999cc

font pango:Source Sans Pro 11
bar std {
    font pango:Symbols Nerd Font, Source Sans Pro 12
    position top
    modifier Mod1
    mode dock
    strip_workspace_numbers yes
    status_command swaystatus
    status_edge_padding 12
    height 30
    colors {
        background $barbg
        focused_workspace $barbg $barbg $bartxt
        urgent_workspace #bb0000aa #bb0000aa $bartxt
        inactive_workspace $barbg $barbg $bardim
    }
}

default_border none

exec_always '\
    if [ -f "$XDG_DATA_HOME/wallpaper.jpg" ]; then \
        swaymsg output \* bg "$XDG_DATA_HOME/wallpaper.jpg" fill; \
    fi; \
'

# KEYBINDINGS -----------------------------------------------------------------
set $mod Mod1

set $runorraise '\
    runorraise() { \
        if ! swaymsg "$1 focus" >/dev/null 2>&1; then \
            swaymsg exec "$2"; \
            swaymsg -t subscribe "[ \\\\"window\\\\" ]"; \
            [ -z "${3:-}" ] || swaymsg "$1 move to workspace $3"; \
            swaymsg "$1 focus"; \
        fi; \
    }; \
'

bindsym $mod+Shift+Space exec "alacritty"

bindsym $mod+i exec $runorraise'runorraise "[app_id=^firefox\$]" browser'

bindsym $mod+d exec $runorraise'runorraise "[app_id=^Code\$]" code

for_window [app_id="^launcher$"] floating enable, border none, \
    resize set width 40 ppt height 20 ppt, move position 30 ppt 40 ppt

bindsym $mod+o exec alacritty --class launcher -o window.opacity=0.8 \
    -e sh -c 'gpg_unlock; matrix_client send'

bindsym $mod+Ctrl+Space exec alacritty \
        --class launcher -o window.opacity=0.8 -e sh -c '\
    gpg_unlock; \
    find "${PASSWORD_STORE_DIR:-$HOME/.password-store}" -not -type d \
            -printf "%P\n" \
        | sed "s/\\.gpg\$//;" \
        | sort -u \
        | fzy \
        | xargs -r -d "\\n" swaymsg -t command exec -- pass show -c'

bindsym $mod+Space exec alacritty \
        --class launcher -o window.opacity=0.8 -e sh -ec '\
    special="$(printf "%s\\n" browser calendar chat chrome \
        code deluge dpi mail network "sound settings" spotify whatsapp)"; \
    windows="$(swaymsg -t get_tree | jq -r ". \
        | recurse(.nodes[]?) \
        | select(.type == \\"con\\" or \
            (.type == \\"workspace\\" and \
                (.name | test(\\"^[0-9]*:|__i3_scratch\\") | not))) \
        | select(.app_id != \\"firefox\\") \
        | select(.window_properties.class != \\"Code\\") \
        | select(.name != \\"chat\\") \
        | select(.app_id != \\"Chromium\\") \
        | select(.app_id != \\"deluge\\") \
        | select(.name != \\"mail\\") \
        | select(.window_properties.class != \\"Spotify\\") \
        | select(.app_id != \\"pavucontrol\\") \
        | select(.window_properties.class // \\"\\" \
            | contains(\\"whatsapp\\") | not) \
        | .name")"; \
    title="$(printf %s\\\\n%s "$special" "$windows" | awk "!_[\\$0]++"|fzy)"; \
    '$runorraise' \
    case "$title" in \
    browser) runorraise "[app_id=^firefox\$]" browser;; \
    calendar) runorraise "[title=^calendar\$]" \
        "alacritty -t calendar -e khal interactive";; \
    chat) gpg_unlock; runorraise "[title=^chat\$]" \
        "alacritty -t chat -e matrix_client view";; \
    chrome) runorraise "[app_id=^chromium\$]" "chromium";; \
    code) runorraise "[app_id=^Code\$]" code;; \
    deluge) gpg_unlock; runorraise "[app_id=^deluge\$]" "deluge";; \
    dpi) dpi="$(printf "%s\\n" 3 2.5 2 1.5 1 | fzy)"; \
        output="$(swaymsg -t get_tree \
            | jq -r ".nodes | .[] \
            | select(recurse(.floating_nodes[]?, .nodes[]?) | .pid == $PPID) \
            | .name")"; \
        swaymsg "output $output scale $dpi";; \
    mail) gpg_unlock; runorraise "[title=^mail\$]" \
        "alacritty -t mail -e mail_client view";; \
    network) link="$(ip link show | sed -n "s/^[0-9]*: \\([^:]*\\).*/\\1/p")";\
        wlan="$(echo "$link" | sed -n "/^wl/{p;q}")"; \
        new="$(printf "%s\\n" wifi wired | fzy)"; \
        case "$new" in \
        wifi) sudo ip link set "$wlan" up;; \
        wired) eth="$(echo "$link" | sed -n "/^enp/{p;q}")"; \
            [ -n "$eth" ] \
                && sudo ip link set "$eth" up \
                && sudo systemctl start dhcpcd@"$eth" \
                && sudo ip link set "$wlan" down;; \
        esac;; \
    sound\ settings) runorraise "[app_id=^pavucontrol\$]" pavucontrol \
        "\$wsvol";; \
    spotify) runorraise "[class=Spotify]" spotify "\$wsspfy";; \
    whatsapp) runorraise "[class=whatsapp]" whatsapp-nativefier-dark;; \
    *) target="$(swaymsg -t get_tree | jq -r --arg title "$title" "[. \
            | recurse(.nodes[]?) \
            | select(.name == \\$title)] \
            | sort_by(if .type == \\"workspace\\" then 0 else 1 end) \
            | .[0] | \\"\(.type) \(.id)\\"")"; \
        case "$target" in \
        workspace*) swaymsg "workspace \\"$title\\"";; \
        con*) swaymsg "[con_id=${target#con }] focus";; \
        esac;;\
    esac; \
'

bindsym $mod+q kill
bindsym $mod+Shift+c reload
bindsym $mod+Shift+r restart
bindsym $mod+Shift+q exit

floating_modifier $mod
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

set $showBrightness ' \
    notify-send -R "$XDG_RUNTIME_DIR/light_notification_id" \
        -h "int:value:$(light -G \
            | ( printf "l(%s + 1)/l(1.2) * 3.99\\n" "$(cat)" ) \
            | bc -l | sed "s/\\..*//")" -t 2000 Brightness \
'
bindsym XF86MonBrightnessDown exec 'light -T 0.833; light -U 1;'$showBrightness
bindsym XF86MonBrightnessUp exec 'light -T 1.2; light -A 1;'$showBrightness

# MEDIA -----------------------------------------------------------------------
set $showVolume ' \
    notify-send -R "$XDG_RUNTIME_DIR/volume_notification_id" \
        -h "int:value:$(pactl get-sink-volume @DEFAULT_SINK@ \
            | sed -n "s/.* \\([0-9]\\{1,3\\}\\)%.*/\\1/p")" \
        -t 2000 "$(pactl get-sink-mute @DEFAULT_SINK@ \
            | grep -q yes\$ && echo Muted || echo Volume)"; \
'
set $lowerVolume ' \
    if ps -u "$USER" -Aocomm= | grep -qxE "pipewire|pulseaudio"; then \
        pactl set-sink-volume @DEFAULT_SINK@ -3%; \
        '$showVolume' \
    elif grep PCM /etc/asound.conf; then \
        sudo amixer set PCM 3%-; \
    else \
        amixer set Master 3%-; \
    fi; \
'
set $raiseVolume ' \
    if ps -u "$USER" -Aocomm= | grep -qxE "pipewire|pulseaudio"; then \
        pactl set-sink-volume @DEFAULT_SINK@ +3%; \
        '$showVolume' \
    elif grep PCM /etc/asound.conf; then \
        sudo amixer set PCM 3%+; \
    else \
        amixer set Master 3%+; \
    fi; \
'
set $toggleMute ' \
    if ps -u "$USER" -Aocomm= | grep -qxE "pipewire|pulseaudio"; then \
        pactl set-sink-mute @DEFAULT_SINK@ toggle; \
        '$showVolume' \
    elif grep PCM /etc/asound.conf; then \
        sudo amixer set PCM toggle; \
    else \
        amixer set Master toggle; \
    fi; \
'

mode "media" {
    bindsym j exec $lowerVolume
    bindsym k exec $raiseVolume
    bindsym m exec $toggleMute
    bindsym Space exec ump toggle
    bindsym l exec 'ump next; swaystatus update'
    bindsym h exec 'ump prev; swaystatus update'
    bindsym a exec 'swaymsg mode default;alacritty --class launcher \
        -o window.opacity=0.8 -e ump add; swaystatus update'
    bindsym n exec 'swaymsg mode default;alacritty --class launcher \
        -o window.opacity=0.8 -e ump now; swaystatus update'
    bindsym v exec 'swaymsg mode default; swaymsg [app_id="^mpv$"] focus'
    bindsym w exec 'swaymsg mode default; PID="$(ps -u "$USER" -Aopid= ocomm= \
            | sed -n "s/^ *\\([0-9]*\\) caffeinated\$/\\1/p")"; \
        [ -n "$PID" ] && kill "$PID" || caffeinated -d; \
        swaystatus update'
    bindsym Escape mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

bindsym XF86AudioLowerVolume exec $lowerVolume
bindsym XF86AudioRaiseVolume exec $raiseVolume
bindsym XF86AudioMute exec $toggleMute
bindsym XF86AudioPlay exec ump toggle
bindsym XF86AudioNext exec ump next
bindsym XF86AudioPrev exec ump prev
bindsym $mod+m mode "media"

# WORKSPACES ------------------------------------------------------------------
# switch to workspace
bindsym $mod+1 workspace $wst1
bindsym $mod+2 workspace $wst2
bindsym $mod+3 workspace $wst3
bindsym $mod+4 workspace $wst4
bindsym $mod+5 workspace $wst5
bindsym $mod+6 workspace $wst6
bindsym $mod+7 workspace $wst7

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $wst1
bindsym $mod+Shift+2 move container to workspace $wst2
bindsym $mod+Shift+3 move container to workspace $wst3
bindsym $mod+Shift+4 move container to workspace $wst4
bindsym $mod+Shift+5 move container to workspace $wst5
bindsym $mod+Shift+6 move container to workspace $wst6

# MOUSE -----------------------------------------------------------------------
focus_wrapping no
mouse_warping none
seat * hide_cursor 5000

input type:touchpad {
    tap enabled
    natural_scroll enabled
}

#MacBook touchpad
input "1452:602:bcm5974" {
    pointer_accel 0.2
    scroll_factor 0.2
}

#Asus touchpad
input "2:14:ETPS/2_Elantech_Touchpad" {
    pointer_accel 0.5
    scroll_factor 0.5
}

#XPS 13 touchpad
input "1739:52710:DLL0945:00_06CB:CDE6_Touchpad" {
    scroll_factor 0.35
}

input "6551:9267:mini_keyboard_Mouse" {
    natural_scroll enabled
}

# SCREENS ---------------------------------------------------------------------
output DP-1 pos 0 0 res 1920x1080
output HDMI-A-1 pos 1920 0 res 1920x1080
output "Goldstar Company Ltd LG TV 0x00000101" scale 3
output "Sharp Corporation 0x14FA 0x00000000" scale 3
output "Unknown 0x1352 0x00000101" scale 2 res 1024x768@60.004Hz

# IDLE AND LOCK ---------------------------------------------------------------
exec '\
    BAT="grep -q Discharging /sys/class/power_supply/*/status"; \
    while [ -e "$SWAYSOCK" ]; do \
        swayidle -w \
            timeout 15 "pgrep -x swaylock && swaymsg output \* dpms off;" \
            resume "swaymsg output \* dpms on" \
            timeout 50 "$BAT && { light -O; light -S 0; }" \
            resume "$BAT && light -I" \
            timeout 60 "$BAT && swaymsg output \* dpms off" \
            resume "swaymsg output \* dpms on" \
            timeout 90 "$BAT && { systemctl suspend-then-hibernate; \
                swaymsg output \* dpms on; }" \
            timeout 300 "$BAT || swaymsg output \* dpms off;" \
            resume "swaymsg output \* dpms on;" \
            after-resume "swaymsg output \* dpms on; light -I"; \
    done; \
'

set $lock '\
    swaylock -i "$XDG_DATA_HOME/wallpaper.jpg"& \
    pid="$!"; \
    swaymsg bar std colors background \#00000000, \
        bar std colors focused_workspace \#00000000 \#00000000 "'$bartxt'", \
        bar std colors inactive_workspace \#00000000 \#00000000 "'$bardim'", \
        bar std mode overlay& \
    wait "$pid"; \
    swaymsg bar std colors background "'$barbg'", \
        bar std colors focused_workspace "'$barbg'" "'$barbg'" "'$bartxt'", \
        bar std colors inactive_workspace "'$barbg'" "'$barbg'" "'$bardim'", \
        bar std mode dock; \
'

bindsym $mod+Ctrl+q exec $lock

exec ' \
    "${FROMPROFILE:-false}" || exit; \
    swaylock -fi "$XDG_DATA_HOME/wallpaper.jpg"; \
    swaymsg bar std mode overlay; \
    sleep 0.3; \
    pkill swaylock; \
    '$lock'  \
    swaystatus update; \
'

# DEFAULT BEHAVIOUR -----------------------------------------------------------
for_window [title="^Firefox — Sharing Indicator$"] kill
for_window [class="^xfreerdp$"] floating disable, border none
for_window [class="^rdesktop$"] floating disable, border none

assign [class="^firefox$"] workspace $wsi
assign [app_id="^firefox$"] workspace $wsi
assign [class="^Gimp$"] workspace $wsgimp
assign [app_id="^gimp[-0-9.]*$"] workspace $wsgimp
assign [class="^Code$"] workspace $wsc
assign [app_id="^Code$"] workspace $wsc
assign [app_id="^code-oss$"] workspace $wsc
assign [app_id="^chromium$"] workspace $wschrm
assign [app_id="^mpv$"] workspace $wsm
assign [class="whatsapp"] workspace $wsw
assign [title="^calendar$"] workspace $wscal
assign [title="^chat$"] workspace $wschat
assign [app_id="^deluge$"] workspace $wstorr
assign [title="^mail$"] workspace $wsmail
assign [title="Spotify"] workspace $wsspfy
assign [app_id="^pavucontrol\$"] workspace $wsvol
assign [app_id="libreoffice-calc"] workspace $wscalc
assign [app_id="libreoffice-impress"] workspace $wspres
assign [app_id="libreoffice-draw"] workspace $wsdraw
assign [app_id="libreoffice-writer"] workspace $wsdoc

exec swaymsg workspace $wst1

include conf.d/*.conf
