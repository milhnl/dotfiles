#!/usr/bin/env sh
#m - do all the things with mail
set -eu

LOCKDIR="$XDG_RUNTIME_DIR/mdaemon"
lock() { mkdir "$LOCKDIR"; }
unlock() { rm -r "$LOCKDIR"; }
sponge() { set -- "$1" "$(mktemp)"; cat >"$2"; mv "$2" "$1"; }
exists() { command -v "$1" >/dev/null 2>&1; }

make_ish() { #1: old, 2: new, 3... cmd
    if [ -z "$(find -L "$2" -newer "$1" -exec echo 1 \; 2>/dev/null)" ]; then
        <"$1" sh -c 'shift 2; exec "$@"' -- "$@" | sponge "$2"
    fi
}

m_send() {
    {
        if exists pandoc; then
            maildown pandoc
        elif exists markdown; then
            maildown markdown
        else
            cat
        fi
    } | msmtp \
        -C "$XDG_CONFIG_HOME/msmtp/msmtprc" \
        "$([ "$(uname -s)" = Darwin ] && echo '--tls-trust-file=system')" \
        "$@"
}

m_configure() {
    set -a
    NOTMUCH_CONFIG="${NOTMUCH_CONFIG-$XDG_CONFIG_HOME/notmuch/default/config}"
    MBSYNCRC="$XDG_CONFIG_HOME/isync/mbsyncrc"
    CERTIFICATEFILE="$([ "$(uname -s)" = "Darwin" ] \
        && echo "/etc/ssl/cert.pem" \
        || echo "/etc/ssl/certs/ca-certificates.crt")"
    mkdir -p "$(dirname "$NOTMUCH_CONFIG")"
    make_ish "$XDG_CONFIG_HOME/notmuch/template" "$NOTMUCH_CONFIG" sed \
        -e :x -e '/\\$/{N;bx' -e '}' -e 's/ *\\\n\( \{0,1\}\) */\1/g' \
        -e 's|\$MAILDIR|'"$MAILDIR"'|'
    make_ish "$XDG_CONFIG_HOME/isync/template" "$MBSYNCRC" sed \
        -e 's|\$MAILDIR|'"$MAILDIR"'|' \
        -e 's|\$CERTIFICATEFILE|'"$CERTIFICATEFILE"'|' \
        -e "$([ "$(lsb_release -sir 2>/dev/null)" = "Ubuntu 16.04" ] \
            && echo 's/^SSLType.*/UseIMAPS yes/')"
    cat "$XDG_CONFIG_HOME/isync/mbsyncrc" | sed -n 's/^Path //p' \
        | while read -r path; do
            mkdir -p "$path"
        done
    set +a
}

m_sync() {
    [ "$#" -eq 0 ] && set -- -a
    m_configure
    mbsync -c "$MBSYNCRC" "$@"
    notmuch new
}

moveable_name() { #1 mail
    set -- "$(basename "$1")"
    echo "${1%%,U=*}$(expr "$1" : '[^:]*\(:2,[DFPRST]*\)')"
}

m_daemon() {
    if ! lock; then echo "Another instance seems to be running" >&2; exit 1; fi
    trap unlock EXIT
    m_configure
    touch "$LOCKDIR/notified"
    while true; do
        notmuch search --output=files tag:deleted and not folder:/Trash/ \
            | while IFS= read -r f; do
                mv "$f" "${f%${f#$MAILDIR/*/}}Trash/cur/$(moveable_name "$f")"
            done
        mbsync -ac "$MBSYNCRC"
        notmuch new
        notmuch show --format=json tag:unread and not tag:deleted \
            | jq -r '. [] | .[] | .[]
                | select(type == "object")
                | [(.timestamp | todateiso8601), .id, .headers.Subject]
                | @tsv' \
            | cat /dev/stdin "$LOCKDIR/notified" \
            | sort -u \
            | tee "$LOCKDIR/notified.all" \
            | comm -23 - "$LOCKDIR/notified" \
            | while read -r eh eh2 subject; do
                notify-send -u low "ï«¯  $subject"
            done
        mv "$LOCKDIR/notified.all" "$LOCKDIR/notified"
        pkill -USR1 alot

        if (grep -q Discharging /sys/class/power_supply/*/status); then
            sleep 3600
        else
            sleep 60
        fi
    done
}

m_view() {
    printf "\e]0;mail\a"
    tput smcup
    alot -p "$MAILDIR" "$@"
    tput rmcup
}

(pgrep -f 'mail_client daemon' || mail_client daemon&) >/dev/null 2>&1
if [ "$#" -eq 0 ]; then set -- view; fi
case "$1" in
send) shift; m_send "$@";;
sync) shift; m_sync "$@";;
daemon) shift; m_daemon "$@";;
view) shift; m_view "$@";;
*) notmuch "$@";;
esac
