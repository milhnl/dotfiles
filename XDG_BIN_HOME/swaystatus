#!/usr/bin/env sh
#swaystatus - sway bar status line
set -eu

np() {
    NP="$(ump current)"
    [ "$NP" != null ] || return
    echo '
      {
        "markup": "pango",
        "full_text": "'"$(ump current)"'",
        "separator": false,
        "separator_block_width": 50
      },'
}

wifi() {
    [ -e /sys/class/net/*/wireless ] || return
    apinfo | {
        IFS="$(printf '\t')" read -r eh snr chan ssid
        if [ -n "$ssid" ]; then
            TEXT="直  <span foreground=\\\"#ffffffaa\\\">$ssid</span>"
        else
            TEXT="睊"
        fi
        echo '
      {
        "markup": "pango",
        "full_text": "'"$TEXT"'",
        "separator": false,
        "separator_block_width": 50
      },'
    }
}

battery() {
    for sys in /sys/class/power_supply/*; do
        <"$sys/type" read type; [ "$type" = Battery ] || continue
        <"$sys/capacity" read charge
        <"$sys/status" read status
        case "$status" in
        Charging) icon=""; state="<span>";;
        Unknown) icon=""; state="<span foreground=\\\"#ffffffaa\\\">";;
        Discharging)
            if [ "$charge" -lt 20 ]; then icon="";
            elif [ "$charge" -lt 40 ]; then icon="";
            elif [ "$charge" -lt 60 ]; then icon="";
            elif [ "$charge" -lt 80 ]; then icon="";
            else icon=""; fi
            state="<span>"
            ;;
        esac
        echo '
          {
            "markup": "pango",
            '"$( [ "$charge" -lt 15 ] && echo '"urgent": true,')"'
            "full_text": " '"$icon  $state$charge"'</span> ",
            "separator": false,
            "separator_block_width": 50
          },'
    done
}

echo '{ "version": 1 }'

echo '['
while true; do
    DATE="$(date '+%Y-%m-%d')"
    TIME="$(date '+%R')"
    echo '[
      '"$(np)"'
      '"$(wifi)"'
      '"$(battery)"'
      {
        "markup": "pango",
        "full_text": "'"$DATE"'  <span weight=\"bold\">'"$TIME"'</span>",
        "separator": false,
        "separator_block_width": 30
      },
    ],'
    sleep 60;
done
echo ']' #eh
