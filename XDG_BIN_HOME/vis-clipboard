#!/usr/bin/env sh
set -eu

exists() { command -v "$1" >/dev/null 2>&1; }
vc_copy() { printf "%s" "System clipboard not supported" >&2 && exit 1; }
vc_paste() { printf "%s" "System clipboard not supported" >&2 && exit 1; }
vc_usable() { return 0; }

get_tty() {
    set -- /dev/tty
    ! [ -t "$1" ] || { printf "%s" "$1" && return; }
    set -- "/dev/$(ps -p $$ -o tty=)"
    set -- "${1% }"
    printf "%s" "$1"
}

#This only works in my config, as I forward TERM_PROGRAM with ssh
if [ "${TERM_PROGRAM-}" != Apple_Terminal ] && tput Ms >/dev/null 2>&1; then
    vc_copy() {
        printf '\033]52;c;%s\a' "$(base64)" >"$(get_tty)"
    }
    vc_paste() (
        tty="$(get_tty)"
        exec <"$tty"
        stty_reset="$(stty -g)"
        trap "stty '$stty_reset'" EXIT && stty -echo raw
        stty -echo raw
        printf '\033]52;c;?\a' >"$tty"
        #Will timeout on WezTerm
        while IFS= read -r -d "$(printf '\033')" response; do
            case "$response" in
            "]52;c;"*)
                read -r -n 1
                printf "%s" "${response#\]52;c;}" | base64 -d
                stty "$stty_reset"
                return
                ;;
            esac
        done
        stty "$stty_reset"
    )
elif [ -n "${WAYLAND_DISPLAY-}" ] && exists wl-copy; then
    vc_copy() { exec 2>/dev/null && wl-copy; }
    vc_paste() { wl-paste --no-newline -t text; }
elif [ -n "${DISPLAY-}" ] && exists xsel; then
    vc_copy() { xsel -bi; }
    vc_paste() { xsel -bo; }
elif [ -n "${DISPLAY-}" ] && exists xclip; then
    vc_copy() { xclip -selection clipboard -i >/dev/null 2>&1; }
    vc_paste() { xclip -selection clipboard -o; }
elif exists pbcopy; then
    vc_copy() { pbcopy; }
    vc_paste() { pbpaste; }
elif [ -c /dev/clipboard ]; then
    vc_copy() { cat >/dev/clipboard; }
    vc_paste() { cat /dev/clipboard; }
elif grep -iq microsoft /proc/version 2>/dev/null && exists clip.exe; then
    vc_copy() { clip.exe; }
    vc_paste() { powershell.exe -c Get-Clipboard | sed "s/$(printf \\r)\$//"; }
else
    vc_usable() { return 1; }
fi

case "$1" in
--usable) vc_usable ;;
--copy) vc_copy ;;
--paste) vc_paste ;;
*)
    printf "%s" "$(basename $0) [--usable|--copy|--paste]" >&2
    exit 1
    ;;
esac
