xwayland enable
exec mako
exec dbus-update-activation-environment --systemd \
    WAYLAND_DISPLAY XDG_SESSION_TYPE=wayland XDG_CURRENT_DESKTOP=sway
# APPEARANCE ------------------------------------------------------------------
set $wsi 1:
set $wschrm 2:
set $wsc 3:
set $wsdoc 21:
set $wscalc 22:
set $wspres 23:
set $wsdraw 24:
set $wsm 100:󰎁
set $wsw 99:
set $wschat 98:󰆉
set $wsgimp 97:󰋩
set $wsmail 96:󰗰
set $wscal 95:󰃭
set $wsvol 94:
set $wsspfy 101:
set $wstorr 102:
set $wst1 11:
set $wst2 12:
set $wst3 13:
set $wst4 14:
set $wst5 15:
set $wst6 16:
set $wst7 17:

set $barbg #00000000
set $bartxt #ffffffff
set $bardim #999999cc

font pango:Source Sans Pro 11
bar std {
    font pango:Symbols Nerd Font, Source Sans Pro 12
    position top
    modifier Mod1
    mode dock
    strip_workspace_numbers yes
    status_command swaystatus
    status_edge_padding 12
    height 30
    colors {
        background $barbg
        focused_workspace $barbg $barbg $bartxt
        urgent_workspace #bb0000aa #bb0000aa $bartxt
        inactive_workspace $barbg $barbg $bardim
    }
}

default_border none

set $getColorScheme '\
    gsettings get org.gnome.desktop.interface color-scheme \
        | sed "s/^.prefer-\\([a-z]*\\)./\\1/;s/default/dark/;" \
'

exec_always '\
    for f in "$XDG_DATA_HOME/$('$getColorScheme')-mode.d/"*; do \
        "$f"; \
    done; \
'

exec '\
    until ping -c 1 ipinfo.io >/dev/null 2>&1; do sleep 5; done; \
    gammastep -l "$(curl -s https://ipinfo.io/ | jq -r .loc | tr , :)"; \
'

# KEYBINDINGS -----------------------------------------------------------------
set $mod Mod1

set $term '\
    term() { \
        alacritty msg create-window "$@" \
            || alacritty --socket "$ALACRITTY_SOCKET" "$@"; \
    }; \
'

set $runorraise '\
    runorraise() { \
        if ! swaymsg "$1 focus" >/dev/null 2>&1; then \
            swaymsg exec "$2"; \
            i=0; \
            until i="$((${i-0} + 1))" && [ "$i" -gt 9 ] || \
                    swaymsg -t subscribe "[ \\\\"window\\\\" ]" \
                        | jq -e ".change == \\\\"new\\\\"" >/dev/null 2>&1; do\
                sleep 0.1; \
            done; \
            [ -z "${3:-}" ] || swaymsg "$1 move to workspace $3"; \
            swaymsg "$1 focus"; \
        fi; \
    }; \
'

bindsym $mod+Shift+Space exec $term'term'

bindsym $mod+i exec $runorraise'runorraise "[app_id=^firefox\$]" browser'

bindsym $mod+d exec $runorraise'runorraise "[instance=^code$]" code

for_window [app_id="^launcher$"] floating enable, border none, \
    resize set width 40 ppt height 20 ppt, move position 30 ppt 40 ppt

bindsym $mod+o exec $term' term --class launcher -o window.opacity=0.8 \
    -e sh -c "gpg_unlock; matrix_client send"'

bindsym $mod+Ctrl+Space exec $term'term \
        --class launcher -o window.opacity=0.8 -e sh -xc "\
    gpg_unlock; \
    find \\"${PASSWORD_STORE_DIR:-\\$HOME/.password-store}\\" -not -type d \
            -printf "%P\\\\\\\\n" \
        | sed \\"s/\\\\.gpg\\\\$//;\\" \
        | sort -u \
        | fzf \
        | xargs -r -d "\\\\\\\\n" swaymsg -t command exec -- pass show -c"'

bindsym $mod+Space exec $term'term --class launcher -o window.opacity=0.8 -e \
    spotlight'

bindsym $mod+q kill
bindsym $mod+Shift+c reload
bindsym $mod+Shift+r restart
bindsym $mod+Shift+q exit

floating_modifier $mod
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

set $showBrightness ' \
    val="$(light -G | awk "{ print int(log(\$0 + 1) / log(1.2) * 3.99) }")"; \
    if [ $val -le 33 ]; then \
        icon="󰃞"; \
    elif [ $val -le 66 ]; then \
        icon="󰃟"; \
    else \
        icon="󰃠"; \
    fi; \
    notify-send -R "$XDG_RUNTIME_DIR/light_notification_id" \
        -h "int:value:$val" \
        -t 2000 "$icon" \
'
bindsym XF86MonBrightnessDown exec 'light -T 0.833; light -U 1;'$showBrightness
bindsym XF86MonBrightnessUp exec 'light -T 1.2; light -A 1;'$showBrightness

# MEDIA -----------------------------------------------------------------------
set $showVolume ' \
    notify-send -R "$XDG_RUNTIME_DIR/volume_notification_id" \
        -h "int:value:$(pactl get-sink-volume @DEFAULT_SINK@ \
            | sed -n "s/.* \\([0-9]\\{1,3\\}\\)%.*/\\1/p")" \
        -t 2000 "$(pactl get-sink-mute @DEFAULT_SINK@ \
            | grep -q yes\$ && echo "󰝟" || echo "󰕾")"; \
'
set $lowerVolume ' \
    if ps -u "$USER" -Aocomm= | grep -qxE "pipewire|pulseaudio"; then \
        pactl set-sink-volume @DEFAULT_SINK@ -3%; \
        '$showVolume' \
    elif grep PCM /etc/asound.conf; then \
        sudo amixer set PCM 3%-; \
    else \
        amixer set Master 3%-; \
    fi; \
'
set $raiseVolume ' \
    if ps -u "$USER" -Aocomm= | grep -qxE "pipewire|pulseaudio"; then \
        pactl set-sink-volume @DEFAULT_SINK@ +3%; \
        '$showVolume' \
    elif grep PCM /etc/asound.conf; then \
        sudo amixer set PCM 3%+; \
    else \
        amixer set Master 3%+; \
    fi; \
'
set $toggleMute ' \
    if ps -u "$USER" -Aocomm= | grep -qxE "pipewire|pulseaudio"; then \
        pactl set-sink-mute @DEFAULT_SINK@ toggle; \
        '$showVolume' \
    elif grep PCM /etc/asound.conf; then \
        sudo amixer set PCM toggle; \
    else \
        amixer set Master toggle; \
    fi; \
'

mode "media" {
    bindsym j exec $lowerVolume
    bindsym k exec $raiseVolume
    bindsym m exec $toggleMute
    bindsym s exec $term'term \
        --class launcher -o window.opacity=0.8 -e select_sink'
    bindsym Space exec playerctl play-pause
    bindsym l exec 'playerctl next; swaystatus update'
    bindsym h exec 'playerctl previous; swaystatus update'
    bindsym a exec $term'swaymsg mode default;term --class launcher \
        -o window.opacity=0.8 -e ump add; swaystatus update'
    bindsym n exec $term'swaymsg mode default;term --class launcher \
        -o window.opacity=0.8 -e ump now; swaystatus update'
    bindsym v exec 'swaymsg mode default; swaymsg "[app_id=^mpv\\$]" focus'
    bindsym w exec 'swaymsg mode default; PID="$(ps -u "$USER" -Aopid= ocomm= \
            | sed -n "s/^ *\\([0-9]*\\) caffeinated\$/\\1/p")"; \
        [ -n "$PID" ] && kill "$PID" || caffeinated -d; \
        swaystatus update'
    bindsym Escape mode "default"
    bindsym Ctrl+bracketleft mode "default"
}

bindsym XF86AudioLowerVolume exec $lowerVolume
bindsym XF86AudioRaiseVolume exec $raiseVolume
bindsym XF86AudioMute exec $toggleMute
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec 'playerctl next; swaystatus update'
bindsym XF86AudioPrev exec 'playerctl previous; swaystatus update'
bindsym $mod+m mode "media"

# GESTURES --------------------------------------------------------------------
bindgesture --exact swipe:3:left workspace next_on_output
bindgesture --exact swipe:3:right workspace prev_on_output

# WORKSPACES ------------------------------------------------------------------
# switch to workspace
bindsym $mod+1 workspace $wst1
bindsym $mod+2 workspace $wst2
bindsym $mod+3 workspace $wst3
bindsym $mod+4 workspace $wst4
bindsym $mod+5 workspace $wst5
bindsym $mod+6 workspace $wst6
bindsym $mod+7 workspace $wst7

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $wst1
bindsym $mod+Shift+2 move container to workspace $wst2
bindsym $mod+Shift+3 move container to workspace $wst3
bindsym $mod+Shift+4 move container to workspace $wst4
bindsym $mod+Shift+5 move container to workspace $wst5
bindsym $mod+Shift+6 move container to workspace $wst6

# MOUSE -----------------------------------------------------------------------
focus_wrapping no
mouse_warping container
seat * hide_cursor 5000

input type:touchpad {
    tap enabled
    natural_scroll enabled
}

#MacBook touchpad
input "1452:602:bcm5974" {
    pointer_accel 0.2
    scroll_factor 0.2
}

#Asus touchpad
input "2:14:ETPS/2_Elantech_Touchpad" {
    pointer_accel 0.5
    scroll_factor 0.5
}

#Magic Trackpad
input "1452:613:Apple_Inc._Magic_Trackpad" {
    scroll_factor 0.2
}

#XPS 13 touchpad
input "1739:52710:DLL0945:00_06CB:CDE6_Touchpad" {
    scroll_factor 0.35
}

input "6551:9267:mini_keyboard_Mouse" {
    natural_scroll enabled
}

# SCREENS ---------------------------------------------------------------------
output "Dell Inc. DELL P2317H 9KFDW77314FB" mode 1920x1060@60Hz
output "Dell Inc. DELL P2317H 9KFDW77314JB" mode 1920x1060@60Hz
output "Goldstar Company Ltd LG TV 0x00000101" scale 3
output "Lenovo Group Limited 0x40BA Unknown" scale 1.3
output "Sharp Corporation 0x14FA Unknown" scale 3
output "RGT 0x1352 0x00000101" scale 2 res 1024x768@60.004Hz
output "GIGA-BYTE TECHNOLOGY CO., LTD. M28U 22170B000449" scale 2

exec_always 'killall kanshi >/dev/null 2>&1; exec kanshi'

# IDLE AND LOCK ---------------------------------------------------------------
exec '\
    swayidle -w \
        timeout 15 "pgrep -x swaylock && swaymsg output \* dpms off;" \
        resume "swaymsg output \* dpms on" \
        timeout 50 "on_battery_power && { light -O; light -S 0; }" \
        resume "on_battery_power && light -I" \
        timeout 60 "on_battery_power && swaymsg output \* dpms off" \
        resume "swaymsg output \* dpms on" \
        timeout 90 "on_battery_power && { \
            systemctl suspend-then-hibernate; \
            swaymsg output \* dpms on; }" \
        timeout 300 "on_battery_power || swaymsg output \* dpms off;" \
        resume "swaymsg output \* dpms on;" \
        after-resume "swaymsg output \* dpms on; light -I"; \
'

set $lock '\
    swaylock -i "$XDG_DATA_HOME/wallpaper-$('$getColorScheme').jpg"& \
    pid="$!"; \
    swaymsg bar std mode overlay; \
    swaystatus update; \
    wait "$pid"; \
    swaystatus update; \
    swaymsg bar std mode dock; \
'

bindsym $mod+Ctrl+q exec $lock

exec ' \
    CHASSIS="$(! [ -e /etc/machine-info ] || . /etc/machine-info; \
        echo "${CHASSIS-$(hostnamectl chassis)}")"; \
    "${FROMPROFILE:-false}" && [ "$CHASSIS" != handset ] || exit; \
    sleep 0.3; \
    pkill swaylock; \
    '$lock'  \
'

bindsym XF86PowerOff exec '\
    CHASSIS="$(! [ -e /etc/machine-info ] || . /etc/machine-info; \
        echo "${CHASSIS-$(hostnamectl chassis)}")"; \
    if [ "$CHASSIS" = handset ]; then \
        INPUT="$(swaymsg -t get_inputs | jq -r ".[] \
                | select(.type == \\"touch\\") \
                | \\"\\\\(.libinput.send_events) \\\\(.identifier)\\" \
            ")"; \
        case "$INPUT" in \
        "enabled "*) \
            swaymsg "input ${INPUT#* } events disabled"; \
            swaymsg output \* dpms off; \
            ;; \
        "disabled "*) \
            swaymsg "input ${INPUT#* } events enabled"; \
            swaymsg output \* dpms on; \
            ;; \
        esac; \
    else \
        poweroff; \
    fi; \
'

# DEFAULT BEHAVIOUR -----------------------------------------------------------
for_window [title="^Firefox — Sharing Indicator$"] kill
for_window [app_id="^gcr-prompter$"] border none
for_window [class="^xfreerdp$"] floating disable, border none
for_window [class="^rdesktop$"] floating disable, border none

assign [class="^firefox$"] workspace $wsi
assign [app_id="^firefox$"] workspace $wsi
assign [class="^Gimp$"] workspace $wsgimp
assign [app_id="^gimp[-0-9.]*$"] workspace $wsgimp
assign [class="^Code$"] workspace $wsc
assign [title=^code ] workspace $wsc
assign [title="Visual Studio Code"] workspace $wsc
assign [app_id="^Code$"] workspace $wsc
assign [app_id="^code-oss$"] workspace $wsc
assign [app_id=^code-url-handler$] workspace $wsc
assign [app_id="^chromium$"] workspace $wschrm
assign [app_id="^element$"] workspace $wschat
assign [app_id="^mpv$"] workspace $wsm
assign [app_id="whatsapp"] workspace $wsw
assign [title="^calendar$"] workspace $wscal
assign [title="^chat$"] workspace $wschat
assign [app_id="^deluge$"] workspace $wstorr
assign [title="^mail$"] workspace $wsmail
assign [title="Spotify"] workspace $wsspfy
assign [app_id="^pavucontrol\$"] workspace $wsvol
assign [app_id="libreoffice-calc"] workspace $wscalc
assign [app_id="libreoffice-impress"] workspace $wspres
assign [app_id="libreoffice-draw"] workspace $wsdraw
assign [app_id="libreoffice-writer"] workspace $wsdoc

exec swaymsg workspace $wst1

include conf.d/*.conf
