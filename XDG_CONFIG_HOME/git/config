[user]
	name = Michiel van den Heuvel
	email = michielvdnheuvel@gmail.com
[alias]
	conflicts = diff --name-only --diff-filter=U --relative
	i = status --short --branch
	d = ! "git with-untracked-added                                           \
		git diff \"$@\" ':!**/package-lock.json' ':!**/yarn.lock' && :"
	s = switch
	sd = ! git d --staged
	r = restore
	sr = restore --staged
	ia = with-untracked-added git add --patch
	ic = ! git ia && git commit
	ir = restore --patch
	isr = restore --patch --staged
	irb = rebase --interactive
	dirb = ! "git -c rebase.instructionFormat='%s%nexec '`                     \
		`'GIT_COMMITTER_DATE='\\''%cD'\\'' git commit --amend --no-edit '` \
		`'--allow-empty --allow-empty-message' rebase --interactive"
	crb = rebase --continue
	edit = ! "edit() { \
			[ -n \"$1\" ] || set -- \"$(git ls-files -co --exclude-standard \
	            | \"$(command -v fzf || command -v fzy 2>/dev/null)\")\"; \
			eval \"exec $EDITOR $(git ls-files --cached --others \
				--exclude-standard | grep -F \"$1\" | sed 1q)\"; \
        }; edit"
	loc = ! git ls-files -zco --exclude-standard -- \
			':!:**/package-lock.json' ':!:package-lock.json' ':!:Cargo.lock' \
			':!:**/*.Designer.cs' \
			':!:*.min.js' ':!:*.min.css' \
			':!:*.jpeg' ':!:*.jpg' ':!:*.ico' ':!:*.png' ':!:*.gif' \
			':!:*.ttf' ':!:*.docx' ':!:*.pdf' \
			':!:*.gpg' ':!:LICENSE' \
		| xargs -0 wc -l 2>/dev/null \
		| sort -n
	with-untracked-added = ! "f() { \
			git ls-files -z -o --exclude-standard \
				| git -c advice.addEmptyPathspec= --literal-pathspecs \
					add -N  --pathspec-from-file=- --pathspec-file-nul \
				2>&1 1>/dev/null \
				| grep -vxF 'Nothing specified, nothing added.' >&2; \
			\"$@\"; \
			git diff --name-only --diff-filter=AR -z \
				| git --literal-pathspecs restore --staged --pathspec-file-nul\
					--pathspec-from-file=- >/dev/null 2>&1 ||:; \
		}; f"
	diff-onto = ! git diff 													  \
		"$(git merge-base rebase-merge/onto REBASE_HEAD)"..rebase-merge/onto
	diff-rebased = ! git diff 											      \
		"$(git merge-base rebase-merge/onto REBASE_HEAD)"..REBASE_HEAD
[push]
	followTags = true
	default = upstream
	autoSetupRemote = true
[core]
	safecrlf = false
	autocrlf = input
	pager = less `less --help 2>&1 | grep -q BusyBox &&echo -XF||echo -+XF -x4`
[credential]
	helper = pass
[diff]
	algorithm = histogram
	colorMoved = plain
	mnemonicPrefix = true
	renames = true
[pull]
	rebase = merges
[stash]
	showPatch = true
	showIncludeUntracked = true
[merge]
	autoStash = true
[rebase]
	autoStash = true
[init]
	defaultBranch = main
[includeIf "hasconfig:remote.*.url:https://milhnl@github.com/milhnl/dotfiles"]
	path = dotfiles.ini
[commit]
	gpgsign = true
[tag]
	sort = version:refname

# vi: ft=ini noet
