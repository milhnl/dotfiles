#!/usr/bin/env sh
#editor - pick the right editor and launch it
set -eu

exists() { command -v "$1" >/dev/null 2>&1; }

ewrap1() {
    if [ "$(uname -s)" = Darwin ] && exists vise; then
        ! ps -oargs= -p $PPID | grep -q alot || exec 2<&1
        exec vise "${command-+.}" -- "$@"
    elif exists vis; then
        ! </proc/$PPID/cmdline grep -q alot || exec 2<&1
        exec vis "${command-+.}" -- "$@"
    elif exists vim; then
        exec vim "$@"
    else
        exec vi "$@"
    fi
}

existing_parent() {
    while ! [ -e "$1" ] && ! [ "$1" = . ]; do
        set -- "$(dirname "$1")"
    done
    echo "$1"
}

mkdir_p_own() { #1 path; $user
    if ! [ -d "$2" ] && ! [ "$2" = . ]; then
        mkdir_p_own "$1" "$(dirname "$2")" || return 1
        mkdir "$2" || return 1
        chown "$1" "$2" || return 1
    fi
}

ewrap0() {
    #Ensure exists
    if [ ! -d "$(dirname "${1-}")" ]; then
        printf "Create directory $(dirname "$1")? [Y/n] " >&2
        read -r REPLY
        [ "$REPLY" != n ] && [ "$REPLY" != N ] || exit 1
    fi
    ls -ld "$(existing_parent "${1-.}")" | {
        read _ _ user group _
        mkdir_p_own "$user:$group" "$(dirname "${1-}")" || exit 1
        [ -e "${1-}" ] \
            || [ "$(id -un):$(id -gn)" = "$user:$group" ] \
            || { touch -- "$1"; chown "$user:$group" "$1"; }
    }
    #Ensure correct newline encoding and no BOM
    encoding="$(cat "${1-}" 2>/dev/null | txtconv -p)"
    if [ -f "${1-}" ] && [ -n "$encoding" ]; then
        txtconv -i "$1"
        (ewrap1 "$@")
        txtconv -i"$encoding" "$1"
    else
        ewrap1 "$@"
    fi
}

git_clone_idempotent() {
    [ -d "$2" ] || git clone "$1" "$2"
}

editor() {
    if ! exists vise && [ "$(uname -s)" = Darwin ] || ! exists vis; then
        pmmux -1 \
            apk+vis \
            apt+vis \
            brew+vis \
            dnf+vis \
            pacman!'
                sudo pacman --needed --noconfirm --asdeps -qS \
                    libtermkey tre unibilium lua lua-lpeg
                pmmux -1 git!"https://github.com/rnpnr/vis master \
                    git switch --detach 08d3b78
                    ./configure
                    make
                    sudo make install
                "
            '
        git_clone_idempotent https://milhnl@github.com/milhnl/vis-backspace \
            "$XDG_CONFIG_HOME/vis/vis-backspace"
        git_clone_idempotent https://github.com/erf/vis-cursors.git \
            "$XDG_CONFIG_HOME/vis/vis-cursors"
        git_clone_idempotent \
            https://milhnl@github.com/milhnl/vis-editorconfig-options.git \
            "$XDG_CONFIG_HOME/vis/vis-editorconfig-options"
        git_clone_idempotent https://milhnl@github.com/milhnl/vis-format \
             "$XDG_CONFIG_HOME/vis/vis-format"
        git_clone_idempotent https://gitlab.com/muhq/vis-lspc \
            "$XDG_CONFIG_HOME/vis/vis-lspc"
        git_clone_idempotent \
            https://milhnl@github.com/milhnl/vis-options-backport \
            "$XDG_CONFIG_HOME/vis/vis-options-backport"
    fi
    if [ -n "${1-}" ] && [ "${1#+}" != "$1" ]; then
        command="$1"
        shift
    fi
    [ ".${1-}" != .-- ] || shift
    if ([ -n "${1-}" ] && [ -e "$1" ] && ! [ -w "$1" ]) \
            || ([ -n "${1-}" ] && ! [ -w "$(existing_parent "$1")" ]); then
        exec sudo env \
            XDG_CONFIG_HOME="$XDG_CONFIG_HOME" \
            XDG_DATA_HOME="$XDG_DATA_HOME" \
            VIS_PATH="$XDG_CONFIG_HOME/vis" \
            PATH="\$PATH:$PATH" \
            "$(command -v editor)" "$@"
    else
        printf "\e]0;edit%s\a" "${1+ $1}"
        ewrap0 "$@"
    fi
}

editor "$@"
